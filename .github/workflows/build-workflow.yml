name: Build
on:
  workflow_call:
    inputs:
      solution:
        description: 'The solution to build'
        default: ''
        required: false
        type: string
      org:
        description: 'The organization to publish CI builds to'
        default: 'foundatiofx'
        required: false
        type: string
      compose-command:
        description: 'The docker compose command to run for tests'
        default: 'docker compose up -d && docker compose up ready || true'
        required: false
        type: string
    secrets:
      NUGET_KEY:
        required: false
      FEEDZ_KEY:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.0.x
          7.0.x
          8.0.x
    - name: Build Reason
      run: "echo ref: ${{github.ref}} event: ${{github.event_name}}"
    - name: Build Version
      run: |
        dotnet tool install --global minver-cli --version 4.3.0
        version=$(minver --tag-prefix v)
        echo "MINVERVERSIONOVERRIDE=$version" >> $GITHUB_ENV
        echo "### Version: $version" >> $GITHUB_STEP_SUMMARY
    - name: Build
      run: dotnet build ${{ inputs.solution }} --configuration Release
    - name: Start Services
      if: hashFiles('docker-compose.yml') != ''
      run: ${{ inputs.compose-command }}
    - name: Run Tests
      run: dotnet test ${{ inputs.solution }} --configuration Release --no-build --logger GitHubActions
    - name: Package
      if: github.event_name != 'pull_request'
      run: dotnet pack ${{ inputs.solution }} --configuration Release --no-build
    - name: Publish CI Packages
      if: github.event_name != 'pull_request'
      run: |
        for package in $(find -name "*.nupkg" | grep "minver" -v); do

          # GitHub
          if [ -n "${{ secrets.GITHUB_TOKEN }}" ]; then
            echo "${0##*/}": Pushing $package to GitHub...
            dotnet nuget push $package --source https://nuget.pkg.github.com/${{ inputs.org }}/index.json --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
          fi

          # Feedz (remove once GitHub supports anonymous access)
          if [ -n "${{ secrets.FEEDZ_KEY }}" ]; then
            echo "${0##*/}": Pushing $package to Feedz...
            dotnet nuget push $package --source https://f.feedz.io/foundatio/foundatio/nuget --api-key ${{ secrets.FEEDZ_KEY }} --skip-duplicate
          fi

        done
    - name: Publish Release Packages
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        for package in $(find -name "*.nupkg" | grep "minver" -v); do
          echo "${0##*/}": Pushing $package...
          dotnet nuget push $package --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_KEY }} --skip-duplicate
        done
