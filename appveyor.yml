version: '{build}'
image: ubuntu
clone_depth: 2

pull_requests:
  do_not_increment_build_number: true

environment:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

init:
  - git config --global core.autocrlf input
  - ps: $env:GIT_HASH=$env:APPVEYOR_REPO_COMMIT.Substring(0, 10)
  - ps: If ("$env:APPVEYOR_REPO_TAG" -ne "true") { $env:BUILD_VERSION="$env:APPVEYOR_BUILD_VERSION-pre" } Else { $env:BUILD_VERSION="$env:APPVEYOR_BUILD_VERSION" }
  - ps: 'Write-Output "Folder: $env:APPVEYOR_BUILD_FOLDER GitHash: $env:GIT_HASH Build: $env:APPVEYOR_BUILD_VERSION Version: $env:BUILD_VERSION"'

test_script:
  - mkdir artifacts
  - dotnet build --version-suffix $BUILD_VERSION -c Release
  - cd test/Foundatio.Tests
  - dotnet test --verbosity minimal --logger:trx;LogFileName=$APPVEYOR_BUILD_FOLDER/artifacts/test-results.trx
  - cd ../..
  #- docker build --target testrunner -t foundatio:test --build-arg build=${BUILD_VERSION} .
  #- docker run -e APPVEYOR_API_URL --net=host -v $(pwd)/artifacts:/app/artifacts foundatio:test

after_test:
  - dotnet pack --version-suffix $BUILD_VERSION -c Release -o $APPVEYOR_BUILD_FOLDER/artifacts
  #- docker build --target publish -t foundatio:publish --build-arg build=${BUILD_VERSION} .
  #- docker run --rm -it -v $(pwd)/artifacts:/app/artifacts foundatio:pack

artifacts:
  - path: artifacts/*.nupkg
    name: NuGet
  - path: artifacts/test-results.trx
    name: Test Results

deploy:
  - provider: Environment
    name: MyGet
  - provider: Environment
    name: NuGet
    on:
      appveyor_repo_tag: true
  - provider: GitHub
    auth_token:
      secure: 0s81q7bweVLTFSOKxnIhan7el6bIFiN8HJ1kYJzOkeFXX7wgGSq9bs/rV53X9qpf
    draft: true
    on:
      appveyor_repo_tag: true

notifications:
  - provider: Slack
    auth_token:
      secure: GniMpFE62HprSyQNQoej/VSBnxn2GNnTrca3BnF8+ikMdqduO4Ts4t297teZF6wDAmGwnOtXusctUla8+WxLFkIztvVCS2Z1RG/DvEDYoc0=
    channel: '#notifications'
